[DEFAULT]
    np=512
    cr=0.8
    f=0.7

# Apply DE without opposit-based learning 
[1exp]
    algorithm=best_1_bin 
    change_criteria=worst 10
    obl=False
    obl_gen_rate=10
    obl_aggressive=False
    obl_aggressive_rate=0

[2exp]
    algorithm=best_1_bin
    change_criteria=worst 20
    obl=False
    obl_gen_rate=10
    obl_aggressive=False
    obl_aggressive_rate=0

###########################
# OPPOSITE-BASED LEARNING #
###########################

# Apply DE with opposit-based learning with a constant rate of 3% of the total generations
[3exp]
    algorithm=best_1_bin
    change_criteria=worst 10
    obl=True
    obl_gen_rate=3
    obl_aggressive=False
    obl_aggressive_rate=0

[4exp]
    algorithm=best_1_bin
    change_criteria=worst 20
    obl=True
    obl_gen_rate=3
    obl_aggressive=False
    obl_aggressive_rate=0

# Apply DE with opposit-based learning with a constant rate of 5% of the total generations
[5exp]
    algorithm=best_1_bin
    change_criteria=worst 10
    obl=True
    obl_gen_rate=5
    obl_aggressive=False
    obl_aggressive_rate=0

[6exp]
    algorithm=best_1_bin
    change_criteria=worst 20
    obl=True
    obl_gen_rate=5
    obl_aggressive=False
    obl_aggressive_rate=0

# Apply DE with opposit-based learning with a constant rate of 8% of the total generations
[7exp]
    algorithm=best_1_bin
    change_criteria=worst 10
    obl=True
    obl_gen_rate=8
    obl_aggressive=False
    obl_aggressive_rate=0

[8exp]
    algorithm=best_1_bin
    change_criteria=worst 20
    obl=True
    obl_gen_rate=8
    obl_aggressive=False
    obl_aggressive_rate=0

#########################################################
#  Based on the results achieved in the previous tests, #
#  we must choose two values of the rate of total       #
#  generations on wich opposition will be applied       #
#########################################################


# # Apply DE with opposit-based learning. In the first 50% of initial generations, apply to the 10 worst individuals. After that apply to the 15% of the population.
# [9exp]
#     algorithm=best_1_bin
#     change_criteria=worst 10
#     obl=True
#     obl_gen_rate=value1
#     obl_aggressive=True
#     obl_aggressive_rate=15

# [10exp]
#     algorithm=best_1_bin
#     change_criteria=worst 10
#     obl=True
#     obl_gen_rate=value2
#     obl_aggressive=True
#     obl_aggressive_rate=15

# # Apply DE with opposit-based learning. In the first 50% of initial generations, apply to the 20 worst individuals. After that apply to the 15% of the population.
# [11exp]
#     algorithm=best_1_bin
#     change_criteria=worst 20
#     obl=True
#     obl_gen_rate=value1
#     obl_aggressive=True
#     obl_aggressive_rate=15

# [12exp]
#     algorithm=best_1_bin
#     change_criteria=worst 20
#     obl=True
#     obl_gen_rate=value2
#     obl_aggressive=True
#     obl_aggressive_rate=15

# ##############################################

# # Apply DE with opposit-based learning. In the first 50% of initial generations, apply to the 10 worst individuals. After that apply to the 20% of the population.
# [13exp]
#     algorithm=best_1_bin
#     change_criteria=worst 10
#     obl=True
#     obl_gen_rate=value1
#     obl_aggressive=True
#     obl_aggressive_rate=20

# [14exp]
#     algorithm=best_1_bin
#     change_criteria=worst 10
#     obl=True
#     obl_gen_rate=value2
#     obl_aggressive=True
#     obl_aggressive_rate=20

# # Apply DE with opposit-based learning. In the first 50% of initial generations, apply to the 20 worst individuals. After that apply to the 20% of the population.
# [15exp]
#     algorithm=best_1_bin
#     change_criteria=worst 20
#     obl=True
#     obl_gen_rate=value1
#     obl_aggressive=True
#     obl_aggressive_rate=20

# [16exp]
#     algorithm=best_1_bin
#     change_criteria=worst 20
#     obl=True
#     obl_gen_rate=value2
#     obl_aggressive=True
#     obl_aggressive_rate=20